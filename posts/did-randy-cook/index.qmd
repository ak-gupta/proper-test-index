---
title: "What is a *Proper Test*?"
author: "Akshay Gupta"
date: "2025-06-17"
draft: true
categories: [golf, statistics]
jupyter: python3
execute:
    echo: false
subtitle: Did Big Randy cook? Or is this whole thing a bit?
---

```{python}
from pathlib import Path

import polars as pl
from lets_plot import *

LetsPlot.setup_html()

pti = (
    pl.read_csv("../../pti.csv")
    .with_columns([pl.col("year").cast(pl.String)])
)

frames: list[pl.DataFrame] = []
for file in (Path.cwd() / ".." / ".." / "data").glob("**/*-scoring-data.json"):
    frames.append(
        pl.read_json(
            file,
            schema={
                "year": pl.Int64,
                "event_id": pl.Int32,
                "event_name": pl.String,
                "dg_id": pl.Int64,
                "player_name": pl.String,
                "round": pl.Int32,
                "course_name": pl.String,
                "course_num": pl.Int32,
                "course_par": pl.Int32,
                "score": pl.Int32,
                "teetime": pl.String,
            },
        )
    )
res = (
    pl.concat(frames)
    .join(
        (
            pti.with_columns([pl.col("year").cast(pl.Int64)])
            .filter(pl.col("pti") > 0)
        ),
        how="left",
        on=["year", "event_id"],
        suffix="_proper"
    )
    .with_columns(
        pl.concat_str(
            [pl.col("year").cast(pl.String), pl.col("event_name")],
            separator=" "
        ).alias("group")
    )
    .filter(pl.col("major_championship"))
    .with_columns(
        count=pl.len().over(["score", "group"]),
        median=pl.col("score").median().over(["group"])
    )
    .sort(pl.col("median"), descending=False)
)
```
```{python}
distribution_all_rounds_def_ = (
    geom_area_ridges(
        aes(x="score", y="group", height="count", fill="pti"),
        stat="identity",
        tooltips=(
            layer_tooltips()
            .line("@group")
            .line("Venue|@course_name")
            .line("Score|@score")
            .line("Count|@count")
            .line("PTI|@pti")
        ),
        scale=0.1,
    ) +
    scale_fill_gradient2() +
    ggsize(800, 800) +
    theme(axis_text_y=element_blank(), axis_title="blank")
)
ggplot(res) + distribution_all_rounds_def_
```
